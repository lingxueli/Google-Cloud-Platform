Google Kubernetes Engine: Qwik Start [ACE]

https://googlecoursera.qwiklabs.com/focuses/12359841?parent=lti_session
https://www.youtube.com/watch?v=u9nsngvmMK4&feature=youtu.be

Overview
Google Kubernetes Engine (GKE) provides a managed environment for deploying, managing, and scaling your containerized applications using Google infrastructure. The GKE environment consists of multiple machines (specifically Google Compute Engine instances) grouped together to form a container cluster. In this lab, you will get hands on practice with container creation and application deployment with GKE.

Kubernetes on Google Cloud
When you run a GKE cluster, you also gain the benefit of advanced cluster management features that Google Cloud provides. These include:

Load-balancing for Compute Engine instances.
Node Pools to designate subsets of nodes within a cluster for additional flexibility.
Automatic scaling of your cluster's node instance count.
Automatic upgrades for your cluster's node software.
Node auto-repair to maintain node health and availability.
Cloud Logging and Monitoring for visibility into your cluster.

Setting a default compute zone
Your compute zone is an approximate regional location in which your clusters and their resources live.

Start a new session in Cloud Shell and run the following command to set your default compute zone to us-central1-a:

gcloud config set compute/zone us-central1-a

Creating a GKE cluster

gcloud container clusters create [CLUSTER-NAME]

gcloud container clusters create my-cluster

NAME        LOCATION       MASTER_VERSION   MASTER_IP     MACHINE_TYPE   NODE_VERSION     NUM_NODES  STATUS
my-cluster  us-central1-a  1.16.13-gke.401  34.68.118.18  n1-standard-1  1.16.13-gke.401  3          RUNNING

Get authentication credentials for the cluster

After creating your cluster, you need to get authentication credentials to interact with the cluster. To authenticate the cluster run the following command:

gcloud container clusters get-credentials [CLUSTER-NAME]

gcloud container clusters get-credentials my-cluster

Deploying an application to the cluster

GKE uses Kubernetes objects to create and manage your cluster's resources. Kubernetes provides the Deployment object for deploying stateless applications like web servers. Service objects define rules and load balancing for accessing your application from the Internet.

Run the following kubectl run command in Cloud Shell to create a new Deployment hello-server from the hello-app container image:

kubectl create deployment hello-server --image=gcr.io/google-samples/hello-app:1.0

This Kubernetes command creates a Deployment object that represents hello-app. In this command:

--image specifies a container image to deploy. In this case, the command pulls the example image from a Google Container Registry bucket. gcr.io/google-samples/hello-app:1.0 indicates the specific image version to pull. If a version is not specified, the latest version is used.

--port specifies the port that the container exposes.

Now create a Kubernetes Service, which is a Kubernetes resource that lets you expose your application to external traffic, by running the following kubectl expose command:

kubectl expose deployment hello-server --type="LoadBalancer" --port 8080

Passing in type="LoadBalancer" creates a Compute Engine load balancer for your container.

Inspect the hello-server Service by running kubectl get:

kubectl get service hello-server

student_02_220a0cb71a69@cloudshell:~ (qwiklabs-gcp-02-b7cc7d61f86d)$ kubectl get service hello-server
NAME           TYPE           CLUSTER-IP     EXTERNAL-IP    PORT(S)          AGE
hello-server   LoadBalancer   10.3.244.193   34.68.243.41   8080:32438/TCP   54s

View the application from your web browser using the external IP address with the exposed port:

http://[EXTERNAL-IP]:8080

Clean up
Run the following to delete the cluster:

gcloud container clusters delete [CLUSTER-NAME]
When prompted, type Y to confirm. Deleting the cluster can take a few minutes.

