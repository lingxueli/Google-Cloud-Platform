PCA Prep - Update and Scale Out a Containerized Application on a Kubernetes Cluster

Topics tested
Update a docker application and push a new version to a container repository.

Deploy the updated application version to a Kubernetes cluster.

Scale out the application so that it is running 2 replicas.

https://www.coursera.org/learn/preparing-cloud-professional-cloud-architect-exam/gradedLti/spJTJ/graded-external-tool


1. deploy first version

gcloud container clusters get-credentials echo-cluster --zone=us-central1-a

kubectl create deployment echo-web --image=gcr.io/qwiklabs-resources/echo-app:v1
deployment.apps/echo-web created

kubectl expose deployment echo-web --type=LoadBalancer --port 80 --target-port 8000
service/echo-web exposed

2. upload the second version, unzip the file

student_04_8f526425268d@cloudshell:~ (qwiklabs-gcp-04-a983b6ff3427)$ mkdir echo-web

student_04_8f526425268d@cloudshell:~/echo-web (qwiklabs-gcp-04-a983b6ff3427)$ gsutil cp -r gs://qwiklabs-gcp-04-a983b6ff3427/echo-web-v2.tar.gz  .
Copying gs://qwiklabs-gcp-04-a983b6ff3427/echo-web-v2.tar.gz...
/ [1 files][  2.0 KiB/  2.0 KiB]
Operation completed over 1 objects/2.0 KiB.

student_04_8f526425268d@cloudshell:~/echo-web (qwiklabs-gcp-04-a983b6ff3427)$ tar -xzf echo-web-v2.tar.gz

student_04_8f526425268d@cloudshell:~/echo-web (qwiklabs-gcp-04-a983b6ff3427)$ ls
Dockerfile  echo-web-v2.tar.gz  main.go  manifests  README.md

student_04_8f526425268d@cloudshell:~/echo-web (qwiklabs-gcp-04-a983b6ff3427)$ rm echo-web-v2.tar.gz
student_04_8f526425268d@cloudshell:~/echo-web (qwiklabs-gcp-04-a983b6ff3427)$ docker build -t echo-app:v2 .                                                                                   

3. build the container image, test and publish to the cloud registry
docker build -t echo-app:v2 .                                                                                   
docker tag echo-app:v2 gcr.io/$DEVSHELL_PROJECT_ID/echo-app:v2
docker push gcr.io/$DEVSHELL_PROJECT_ID/echo-app:v2


3. deploy to kubernetes cluster
gcloud container clusters get-credentials echo-cluster --zone=us-central1-a

kubectl create deployment echo-web --image=gcr.io/qwiklabs-resources/echo-app:v2

kubectl scale deployment echo-web --replicas=2

kubectl expose deployment echo-web --type=LoadBalancer --port 80 --target-port 8000

kubectl get svc

student_04_8f526425268d@cloudshell:~/echo-web (qwiklabs-gcp-04-a983b6ff3427)$ kubectl get svc
NAME         TYPE           CLUSTER-IP     EXTERNAL-IP      PORT(S)        AGE
echo-web     LoadBalancer   10.3.255.122   130.211.120.42   80:32433/TCP   33m
kubernetes   ClusterIP      10.3.240.1     <none>           443/TCP        36m